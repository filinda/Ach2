apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:8
        name: mysqlcont
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: Qwer123!
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d
        resources:
          limits:
            memory: "400Mi"
            cpu: "250m"
      volumes:
      - name: mysql-initdb
        configMap:
         name: mysql-initdb-config
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  initdb.sql: |
    CREATE USER 'user1' IDENTIFIED WITH mysql_native_password BY 'Qwer123!';
    GRANT ALL PRIVILEGES ON * . * TO 'user1';
    FLUSH PRIVILEGES;
    CREATE SCHEMA ach2;
    CREATE TABLE ach2.used_vars ( variable int NOT NULL );